apiVersion: apps/v1
kind: Deployment
metadata:
  name: sunny-api-gateway
  namespace: sunny-payments
  labels:
    app: sunny-api-gateway
    component: gateway
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: sunny-api-gateway
  template:
    metadata:
      labels:
        app: sunny-api-gateway
        component: gateway
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: sunny-api-gateway
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: api-gateway
        image: sunny/api-gateway:v1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: REDIS_HOST
          value: "sunny-redis-service"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sunny-redis-secret
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: sunny-auth-secret
              key: jwt-secret
        - name: ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: sunny-encryption-secret
              key: encryption-key
        - name: CORE_ENGINE_URL
          value: "http://sunny-core-engine-service:8081"
        - name: KENYA_SERVICE_URL
          value: "http://sunny-kenya-service:8082"
        - name: AUTH_SERVICE_URL
          value: "http://sunny-auth-service:8083"
        - name: ANALYTICS_SERVICE_URL
          value: "http://sunny-analytics-service:8084"
        - name: NOTIFICATION_SERVICE_URL
          value: "http://sunny-notification-service:8085"
        - name: FRAUD_DETECTION_URL
          value: "http://sunny-fraud-detection-service:8086"
        - name: AI_SERVICE_URL
          value: "http://sunny-ai-service:8087"
        - name: COMPLIANCE_SERVICE_URL
          value: "http://sunny-compliance-service:8088"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: logs-volume
          mountPath: /app/logs
      volumes:
      - name: config-volume
        configMap:
          name: sunny-api-gateway-config
      - name: logs-volume
        emptyDir: {}
      nodeSelector:
        node-type: "compute"
      tolerations:
      - key: "node-type"
        operator: "Equal"
        value: "compute"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - sunny-api-gateway
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: sunny-api-gateway-service
  namespace: sunny-payments
  labels:
    app: sunny-api-gateway
    component: gateway
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: http
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP
  selector:
    app: sunny-api-gateway

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sunny-api-gateway-config
  namespace: sunny-payments
data:
  cors.json: |
    {
      "allowedOrigins": [
        "https://sunnypayments.com",
        "https://app.sunnypayments.com",
        "https://business.sunnypayments.com",
        "https://institutions.sunnypayments.com",
        "https://admin.sunnypayments.com",
        "https://developers.sunnypayments.com"
      ]
    }
  rate-limits.json: |
    {
      "global": {
        "windowMs": 900000,
        "maxRequests": 1000
      },
      "user": {
        "windowMs": 900000,
        "maxRequests": 2000
      },
      "apiKey": {
        "windowMs": 3600000,
        "maxRequests": 10000
      }
    }

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sunny-api-gateway
  namespace: sunny-payments
  labels:
    app: sunny-api-gateway

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: sunny-api-gateway-netpol
  namespace: sunny-payments
spec:
  podSelector:
    matchLabels:
      app: sunny-api-gateway
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: nginx-ingress
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: sunny-core-engine
    ports:
    - protocol: TCP
      port: 8081
  - to:
    - podSelector:
        matchLabels:
          app: sunny-kenya-service
    ports:
    - protocol: TCP
      port: 8082
  - to:
    - podSelector:
        matchLabels:
          app: sunny-auth-service
    ports:
    - protocol: TCP
      port: 8083
  - to:
    - podSelector:
        matchLabels:
          app: sunny-redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
